class Card
types
public String = seq of char;
instance variables
id: nat;
group: Group;
name: String;
plates: set of String;
inside: bool;

operations
public Card: nat*Group*String==> Card
	Card(newId,newGroup,newName) == (
		id := newId;
		group := newGroup;
		name := newName;
		plates := {};
		inside := false;
		return self;
	)
	pre newId>-1;
	
public getId: () ==> nat
	getId() == return self.id;
	
public getGroup: () ==> Group
	getGroup() == return self.group;
	
public isInside: () ==> bool
	isInside() == return self.inside;
	
public addPlate: String ==> ()
	addPlate(newPlate) == (
		plates := plates union {newPlate}
	)
	pre newPlate not in set plates;
	
end Card